# 정답 코드
x = int(input())

# 앞서 계산된 결과를 저장하기 위한 DP 테이블 초기화
# d[x]: x까지 도달하기 위해 반복하는 연산 횟수
d = [0] * 1000001

# 다이나믹 프로그래맹(Dynamic Programming) 진행 (보텀업)
for i in range(2, x+1):
    # 현재의 수에서 1을 빼는 경우
    d[i] = d[i-1] + 1   # 단순 연산 횟수 증가

    # i로 나눴을 때 연산횟수랑 아닐때 연산 횟수 중에 작은 것을 선택

    # 현재의 수가 2로 나누어 떨어지는 경우
    if i % 2 == 0:
        d[i] = min(d[i], d[i // 2] + 1)     

    # 현재의 수가 3으로 나누어 떨어지는 경우
    if i % 3 == 0:
        d[i] = min(d[i], d[i // 3] + 1)

    # 현재의 수가 5로 나누어 떨어지는 경우
    if i % 5 == 0:
        d[i] = min(d[i], d[i // 5] + 1)

print(d[x]) # x에 도달하기 까지 최소 연산 횟수